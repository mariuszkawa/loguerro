/*
 * MIT License
 *
 * Copyright (c) 2018 Mariusz Kawa
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

plugins {
    id 'java'
}

group 'com.codigeria.loguerro'
version '0.0.1-SNAPSHOT'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def flinkVersion = '1.6.0'
def scalaBinaryVersion = '2.11'

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.guava:guava:26.0-jre'
    compile 'org.apache.commons:commons-lang3:3.8'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile "org.apache.flink:flink-java:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'org.hibernate:hibernate-core:5.3.6.Final'
    compile 'org.hsqldb:hsqldb:2.4.1'
    compile 'org.codehaus.groovy:groovy:2.5.2'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testCompile 'org.mockito:mockito-core:2.21.0'
    testCompile 'org.mockito:mockito-junit-jupiter:2.21.0'
    testCompile 'com.jayway.awaitility:awaitility:1.7.0'
    testCompile 'org.assertj:assertj-core:3.11.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.codigeria.loguerro.LoguerroMain'
    }
}

shadowJar {
    baseName = 'loguerro'
    classifier = null
    version = null
    append 'reference.conf'
}